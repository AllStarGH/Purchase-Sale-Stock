#1.配置根Logger
#log4j.rootLogger = [ level ] , appenderName1, appenderName2, …
#level :设定日志记录的最低级别,可设的值有OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL或者自定义的级别,
#通过在这里设定级别,您可以控制应用程序中相应级别的日志信息的开关,比如在这里设定了INFO级别,则应用程序中所有DEBUG级别的日志信息将不会被打印出来.
#appenderName：就是指定日志信息要输出到哪里.可以同时指定多个输出目的地,用逗号隔开.
log4j.rootLogger=file,DEBUG,stdout,file,R
#配置日志信息输出目的地（appender）
#log4j.appender.appenderName=classname
#className：可设值如下：
#(1)org.apache.log4j.ConsoleAppender（控制台）
#(2)org.apache.log4j.FileAppender（文件）
#(3)org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#(4)org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#(5)org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n
 
 #标准输出信息至文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#.File:指定log文件路径
log4j.appender.file.File=/home/admin/workspace/eclipse/eclipse-workspace/StockerManager/Logs/LOG4J/Record-Standard.txt
#.Append:true表示消息增加到指定文件中,false则将消息覆盖指定的文件内容,默认值是true
log4j.appender.file.Append=true
#.Threshold:指定日志信息的最低输出级别,默认为DEBUG
log4j.appender.file.Threshold=INFO
#.DatePattern:指定滚动日志文件的时间
#(1)'.'yyyy-MM：每月
#(2)'.'yyyy-ww：每周
#(3)'.'yyyy-MM-dd：每天
#(4)'.'yyyy-MM-dd-a：每天两次
#(5)'.'yyyy-MM-dd-HH：每小时
#(6)'.'yyyy-MM-dd-HH-mm：每分钟
log4j.appender.file.DatePattern='-'yyyy-MM-dd'.txt'

#配置日志信息的输出格式（Layout）可设值如下：
#(1)org.apache.log4j.HTMLLayout（以HTML表格形式布局）
#(2)org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#(3)org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
#(4)org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#设定以怎样的格式显示消息
log4j.appender.file.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%-5p] %m%n
 
#log4j在控制台打印完整sql
log4j.logger.com.ibatis=DEBUG
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%-5p %d{yyyy-MM-dd HH:mm:ssS} %m%n

#配置打印sql语句到文件相关配置
log4j.appender.R=org.apache.log4j.RollingFileAppender  
#打印的文件名称和文件位置
log4j.appender.R.File=/home/admin/workspace/eclipse/eclipse-workspace/StockerManager/Logs/LOG4J/Record-MySQL.TXT
#日志文件分割，每个日志文件大小    
log4j.appender.R.MaxFileSize=7MB
#日志文件保留个数   
log4j.appender.R.MaxBackupIndex=20
#设置以追加形式打印  
log4j.appender.R.Append=true  
#日志级别
log4j.appender.R.Threshold=DEBUG  
log4j.appender.R.layout=org.apache.log4j.PatternLayout 
#日志格式 
log4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}\:%L - %m%n
#作用域
log4j.logger.com.asiainfo=DEBUG
log4j.logger.org.exam=INFO
log4j.logger.org.springframework.beans.factory=INFO
